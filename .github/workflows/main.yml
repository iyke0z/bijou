name: Deploy ngmkt admin FE App

on:
  push:
    branches:
      - main  # Run this workflow when changes are pushed to the main branch

jobs:
  build-and-deploy:
    name: Build and Deploy Vue.js App
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
        - name: Set up Node.js
          uses: actions/setup-node@v3
          with:
            node-version: '14.18.1'  # Specify your Node.js version

      # Step 3: Replace baseURL in Api.js with the new URL
      - name: Replace baseURL in Api.js
        run: |
          # Replace the baseURL in src/javascript/Api.js with https://api.edzain.ngmkt.site
          sed -i 's|http://localhost:9009/api/v1|https://api.edzain.ngmkt.site/api/v1|' src/javascript/Api.js

      # Step 4: Install dependencies
      - name: Install Dependencies
        run: npm install

      # Step 5: Build the Vue.js app
      - name: Build Application
        run: npm run build

      # Step 6: Upload Built Files via SCP
      - name: Upload Built Files via SCP
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: 22  # SCP over SSH
          source: dist  # Local directory to upload
          target: ${{ secrets.FTP_PATH }}/business_sites/edzain/frontend/  # Remote directory

      # Step 7: Run Post-Deployment Commands
      - name: Run Post-Deployment Commands
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: 22  # SSH port
          script: |
            # Check and print the current working directory
            echo "Current working directory: $(pwd)"
            
            # Navigate to the public directory (adjust the path if necessary)
            cd "www/business_sites/edzain/frontend" | { echo "Target directory does not exist"; exit 1; }

            # Verify that we are in the correct directory
            echo "Changed to directory: $(pwd)"

            # List the files in the directory for debugging purposes
            echo "Files in the current directory:"
            ls -la || { echo "Error: Failed to list files"; exit 1; }

            # Check if the dist folder exists before proceeding
            if [ -d public_html/business_sites/edzain/frontend/dist ]; then
              # Change into the dist folder
              cd public_html/business_sites/edzain/frontend/dist || { echo "Error: Failed to enter dist directory"; exit 1; }

              cp -r * ../ || { echo "Error: Failed to copy files"; exit 1; }

              # Return to the public directory
              cd .. || { echo "Error: Failed to return to public directory"; exit 1; }

              # Remove the dist folder
              rm -rf dist || { echo "Error: Failed to remove dist folder"; exit 1; }
            else
              echo "Error: dist folder does not exist in $(pwd); exiting to avoid unintended deletion."
              exit 1
            fi
